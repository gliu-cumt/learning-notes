git init	初始化一个仓库

添加文件到仓库：
git add file
git commit -m message

查看历史记录
git log
回退版本
git reset --hard HARD^*
HEAD代表当前版本，HEAD^代表上一个版本，HEAD^^代表上上一个版本

查看历史命令
git reflog
工作区：
版本库中除了.git之外的地方

暂存区：
Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，
还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。

把文件往Git版本库里添加的时候，是分两步执行的：
第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。
因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，
git commit就是往master分支上提交更改。

查看工作区和版本库里面最新版本的区别：
git diff HEAD -- file

查看状态
git status

丢弃工作区的修改
git checkout -- file

命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
git checkout -- file命令中的--很重要，没有--，就变成了切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到git checkout命令。



git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区：


本地库和github远程库
1、本地库与远程库关联
git remote orgin git@github.com:username/your repository
2、配置用户名和邮箱
git config --global user.name="xxx"
git config --global user.email ="xxx"
3、设置SSH KEY
（1）在git bash 中执行ssh-keygen -t -rsa -C "your email"，一路回车
（2）根据命令行信息找到id_rsa.pub所在位置，并将其配置在github的SSHkeys中
4、将本地库同步到远程库、
git push -u origin master


远程库clone
git clone git@github.com:username/your repository
git clone git@github.com:gliu-cumt/learning-notes.git

https://github.com/gliu-cumt/learning-notes.git



分支管理
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

git log --graph
